{"ast":null,"code":"var _jsxFileName = \"/home/abdelrahman/Documents/Final Website/Login-Registration-Form-main/Basic-Website-using-HTML-CSS-master/medical-symptom-checker-master/src/components/Symptom/Symptom.jsx\";\nimport React, { Component } from \"react\"; //data\n\nimport { Symptoms } from \"../../data/Symptoms\";\nimport { Diseases } from \"../../data/Diseases\"; //component\n//CSS\n\nimport \"./Symptom.css\"; //icon\n// import SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\n\nclass Symptom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gender: this.props.gender,\n      age: this.props.age,\n      user_symptoms: this.props.userSymptoms,\n      disease_with_possibility: this.props.diseasePossibility,\n      dropdown_style: \"dropdown-menu-on\",\n      searched: \"\"\n    };\n    this.disease_symptoms = Diseases;\n\n    this.addSymptomButtonEvent = e => {\n      if (!this.state.user_symptoms.includes(e.target.value)) {\n        let user_symptoms = [...this.state.user_symptoms, e.target.value];\n        return this.setState({\n          user_symptoms: user_symptoms\n        }, () => {\n          this.get_possible_disease();\n        });\n      }\n    };\n\n    this.deleteSymptomButtonEvent = e => {\n      if (this.state.user_symptoms.includes(e.target.value)) {\n        let user_symptoms = [...this.state.user_symptoms];\n        user_symptoms = user_symptoms.filter(s => s !== e.target.value);\n        this.setState({\n          user_symptoms: user_symptoms\n        }, () => {\n          this.get_possible_disease();\n        });\n      }\n    };\n\n    this.get_possible_disease = () => {\n      let possible_disease_function = (arr1, arr2) => {\n        let empty_array = [];\n\n        for (let i = 0; i < arr1.length; i++) {\n          for (let n = 0; n < arr2.length; n++) {\n            if (arr1[i] === arr2[n]) {\n              empty_array = [...empty_array, arr1[i]];\n            }\n          }\n        }\n\n        return empty_array;\n      };\n\n      let all_objects = [];\n      Object.keys(this.disease_symptoms).map(key => {\n        let array1 = [...this.disease_symptoms[key]];\n        let array2 = [...this.state.user_symptoms];\n        let empty_array = possible_disease_function(array1, array2);\n        let possbility = (empty_array.length / array1.length * 100).toFixed(2);\n        let object = {\n          name: key,\n          possibility: possbility,\n          disease_symptom: this.disease_symptoms[key],\n          symptom_user_has: empty_array\n        };\n        return all_objects = [...all_objects, object];\n      });\n      return this.setState({\n        disease_with_possibility: all_objects\n      }, () => {\n        this.props.getPossibleDisease(this.state.disease_with_possibility, this.state.user_symptoms);\n      });\n    };\n\n    this.getInputSymptoms = e => {\n      return this.setState({\n        searched: e.target.value\n      });\n    };\n\n    this.on_click_reset_button = () => {\n      return this.setState({\n        user_symptoms: [],\n        disease_with_possibility: []\n      }, () => {\n        return this.get_possible_disease();\n      });\n    };\n\n    this.keyDownEvent = e => {\n      const re = new RegExp(e.target.value.split(\"\").join(\"\\\\w*\").replace(/\\W/, \"\"), \"i\");\n      const symps = Symptoms.filter(each => {\n        return each.match(re);\n      });\n\n      if (e.key === \"Enter\") {\n        // eslint-disable-next-line array-callback-return\n        return symps.map(key => {\n          if (!this.state.user_symptoms.includes(key) && e.target.value.toLowerCase() === key.toLowerCase()) {\n            return this.setState({\n              user_symptoms: [...this.state.user_symptoms, key]\n            }, () => {\n              return this.get_possible_disease();\n            });\n          } else if (!this.state.user_symptoms.includes(e.target.value)) {\n            for (let i = 0; i < symps.length; i++) {\n              if (!this.state.user_symptoms.includes(symps[i])) {\n                this.setState({\n                  user_symptoms: [...this.state.user_symptoms, symps[i]]\n                }, () => {\n                  return this.get_possible_disease();\n                });\n                break;\n              }\n            }\n          }\n        });\n      }\n    };\n\n    this.showContent = () => {\n      // eslint-disable-next-line default-case\n      const symps = Symptoms.filter(each => {\n        return each.toLowerCase().includes(this.state.searched.toLowerCase());\n      }); // console.log(symps, \"symps\");\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"#Symptoms\",\n        className: \"grid-row width-full\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 tablet:grid-col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        class: \"usa-input searchSymptomsInput\",\n        onKeyDown: this.keyDownEvent,\n        onChange: this.getInputSymptoms,\n        placeholder: \"Search Symptoms\",\n        id: \"input-type-text\",\n        name: \"input-type-text\",\n        type: \"text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"symtomsListBox padding-top-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, symps.filter(item => !this.state.user_symptoms.includes(item)).map((key, id) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.addSymptomButtonEvent.bind(this),\n          value: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }\n        }, key));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 tablet:grid-col-7 padding-top-2 UserSymptoms\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, this.state.user_symptoms.map((key, id) => /*#__PURE__*/React.createElement(\"li\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }, key, \" \", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.deleteSymptomButtonEvent.bind(this),\n        key: id,\n        value: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }, \"X\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 width-full display-flex flex-row flex-justify-start resetButton padding-left-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.on_click_reset_button,\n        className: \"usa-button usa-button--secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, \"Reset\")));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 12\n      }\n    }, this.showContent());\n  }\n\n}\n\nexport default Symptom;","map":{"version":3,"sources":["/home/abdelrahman/Documents/Final Website/Login-Registration-Form-main/Basic-Website-using-HTML-CSS-master/medical-symptom-checker-master/src/components/Symptom/Symptom.jsx"],"names":["React","Component","Symptoms","Diseases","Symptom","state","gender","props","age","user_symptoms","userSymptoms","disease_with_possibility","diseasePossibility","dropdown_style","searched","disease_symptoms","addSymptomButtonEvent","e","includes","target","value","setState","get_possible_disease","deleteSymptomButtonEvent","filter","s","possible_disease_function","arr1","arr2","empty_array","i","length","n","all_objects","Object","keys","map","key","array1","array2","possbility","toFixed","object","name","possibility","disease_symptom","symptom_user_has","getPossibleDisease","getInputSymptoms","on_click_reset_button","keyDownEvent","re","RegExp","split","join","replace","symps","each","match","toLowerCase","showContent","item","id","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAyB,qBAAzB,C,CACA;AAEA;;AACA,OAAO,eAAP,C,CACA;AAEA;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACtB;AACNC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD,MADb;AAENE,MAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAFV;AAGNC,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWG,YAHpB;AAINC,MAAAA,wBAAwB,EAAE,KAAKJ,KAAL,CAAWK,kBAJ/B;AAKNC,MAAAA,cAAc,EAAE,kBALV;AAMNC,MAAAA,QAAQ,EAAE;AANJ,KADsB;AAAA,SAU9BC,gBAV8B,GAUXZ,QAVW;;AAAA,SAc9Ba,qBAd8B,GAcLC,CAAD,IAAO;AAC7B,UAAI,CAAC,KAAKZ,KAAL,CAAWI,aAAX,CAAyBS,QAAzB,CAAkCD,CAAC,CAACE,MAAF,CAASC,KAA3C,CAAL,EAAwD;AACtD,YAAIX,aAAa,GAAG,CAAC,GAAG,KAAKJ,KAAL,CAAWI,aAAf,EAA8BQ,CAAC,CAACE,MAAF,CAASC,KAAvC,CAApB;AACA,eAAO,KAAKC,QAAL,CAAc;AAAEZ,UAAAA,aAAa,EAAEA;AAAjB,SAAd,EAAgD,MAAM;AAC3D,eAAKa,oBAAL;AACD,SAFM,CAAP;AAGD;AACF,KArB6B;;AAAA,SAuB9BC,wBAvB8B,GAuBFN,CAAD,IAAO;AAChC,UAAI,KAAKZ,KAAL,CAAWI,aAAX,CAAyBS,QAAzB,CAAkCD,CAAC,CAACE,MAAF,CAASC,KAA3C,CAAJ,EAAuD;AACrD,YAAIX,aAAa,GAAG,CAAC,GAAG,KAAKJ,KAAL,CAAWI,aAAf,CAApB;AACAA,QAAAA,aAAa,GAAGA,aAAa,CAACe,MAAd,CAAsBC,CAAD,IAAOA,CAAC,KAAKR,CAAC,CAACE,MAAF,CAASC,KAA3C,CAAhB;AACA,aAAKC,QAAL,CAAc;AAAEZ,UAAAA,aAAa,EAAEA;AAAjB,SAAd,EAAgD,MAAM;AACpD,eAAKa,oBAAL;AACD,SAFD;AAGD;AACF,KA/B6B;;AAAA,SAkC9BA,oBAlC8B,GAkCP,MAAM;AAC3B,UAAII,yBAAyB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC9C,YAAIC,WAAW,GAAG,EAAlB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACG,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC,gBAAIL,IAAI,CAACG,CAAD,CAAJ,KAAYF,IAAI,CAACI,CAAD,CAApB,EAAyB;AACvBH,cAAAA,WAAW,GAAG,CAAC,GAAGA,WAAJ,EAAiBF,IAAI,CAACG,CAAD,CAArB,CAAd;AACD;AACF;AACF;;AACD,eAAOD,WAAP;AACD,OAVD;;AAWA,UAAII,WAAW,GAAG,EAAlB;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKpB,gBAAjB,EAAmCqB,GAAnC,CAAwCC,GAAD,IAAS;AAC9C,YAAIC,MAAM,GAAG,CAAC,GAAG,KAAKvB,gBAAL,CAAsBsB,GAAtB,CAAJ,CAAb;AACA,YAAIE,MAAM,GAAG,CAAC,GAAG,KAAKlC,KAAL,CAAWI,aAAf,CAAb;AACA,YAAIoB,WAAW,GAAGH,yBAAyB,CAACY,MAAD,EAASC,MAAT,CAA3C;AACA,YAAIC,UAAU,GAAG,CAAEX,WAAW,CAACE,MAAZ,GAAqBO,MAAM,CAACP,MAA7B,GAAuC,GAAxC,EAA6CU,OAA7C,CAAqD,CAArD,CAAjB;AACA,YAAIC,MAAM,GAAG;AACXC,UAAAA,IAAI,EAAEN,GADK;AAEXO,UAAAA,WAAW,EAAEJ,UAFF;AAGXK,UAAAA,eAAe,EAAE,KAAK9B,gBAAL,CAAsBsB,GAAtB,CAHN;AAIXS,UAAAA,gBAAgB,EAAEjB;AAJP,SAAb;AAMA,eAAQI,WAAW,GAAG,CAAC,GAAGA,WAAJ,EAAiBS,MAAjB,CAAtB;AACD,OAZD;AAaA,aAAO,KAAKrB,QAAL,CAAc;AAAEV,QAAAA,wBAAwB,EAAEsB;AAA5B,OAAd,EAAyD,MAAM;AACpE,aAAK1B,KAAL,CAAWwC,kBAAX,CAA8B,KAAK1C,KAAL,CAAWM,wBAAzC,EAAmE,KAAKN,KAAL,CAAWI,aAA9E;AACD,OAFM,CAAP;AAGD,KA/D6B;;AAAA,SAoE9BuC,gBApE8B,GAoEV/B,CAAD,IAAO;AACxB,aAAO,KAAKI,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEG,CAAC,CAACE,MAAF,CAASC;AAArB,OAAd,CAAP;AACD,KAtE6B;;AAAA,SA0E9B6B,qBA1E8B,GA0EN,MAAM;AAC5B,aAAO,KAAK5B,QAAL,CACL;AACEZ,QAAAA,aAAa,EAAE,EADjB;AAEEE,QAAAA,wBAAwB,EAAE;AAF5B,OADK,EAKL,MAAM;AACJ,eAAO,KAAKW,oBAAL,EAAP;AACD,OAPI,CAAP;AASD,KApF6B;;AAAA,SAsF9B4B,YAtF8B,GAsFdjC,CAAD,IAAO;AACpB,YAAMkC,EAAE,GAAG,IAAIC,MAAJ,CAAWnC,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeiC,KAAf,CAAqB,EAArB,EAAyBC,IAAzB,CAA8B,MAA9B,EAAsCC,OAAtC,CAA8C,IAA9C,EAAoD,EAApD,CAAX,EAAoE,GAApE,CAAX;AAEA,YAAMC,KAAK,GAAGtD,QAAQ,CAACsB,MAAT,CAAiBiC,IAAD,IAAU;AACtC,eAAOA,IAAI,CAACC,KAAL,CAAWP,EAAX,CAAP;AACD,OAFa,CAAd;;AAGA,UAAIlC,CAAC,CAACoB,GAAF,KAAU,OAAd,EAAuB;AACrB;AACA,eAAOmB,KAAK,CAACpB,GAAN,CAAWC,GAAD,IAAS;AACxB,cAAI,CAAC,KAAKhC,KAAL,CAAWI,aAAX,CAAyBS,QAAzB,CAAkCmB,GAAlC,CAAD,IAA2CpB,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeuC,WAAf,OAAiCtB,GAAG,CAACsB,WAAJ,EAAhF,EAAmG;AACjG,mBAAO,KAAKtC,QAAL,CACL;AACEZ,cAAAA,aAAa,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWI,aAAf,EAA8B4B,GAA9B;AADjB,aADK,EAIL,MAAM;AACJ,qBAAO,KAAKf,oBAAL,EAAP;AACD,aANI,CAAP;AAQD,WATD,MASO,IAAI,CAAC,KAAKjB,KAAL,CAAWI,aAAX,CAAyBS,QAAzB,CAAkCD,CAAC,CAACE,MAAF,CAASC,KAA3C,CAAL,EAAwD;AAC7D,iBAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0B,KAAK,CAACzB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,kBAAI,CAAC,KAAKzB,KAAL,CAAWI,aAAX,CAAyBS,QAAzB,CAAkCsC,KAAK,CAAC1B,CAAD,CAAvC,CAAL,EAAkD;AAChD,qBAAKT,QAAL,CACE;AACEZ,kBAAAA,aAAa,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWI,aAAf,EAA8B+C,KAAK,CAAC1B,CAAD,CAAnC;AADjB,iBADF,EAIE,MAAM;AACJ,yBAAO,KAAKR,oBAAL,EAAP;AACD,iBANH;AAQA;AACD;AACF;AACF;AACF,SAzBM,CAAP;AA0BD;AACF,KAzH6B;;AAAA,SA2H9BsC,WA3H8B,GA2HhB,MAAM;AAClB;AACA,YAAMJ,KAAK,GAAGtD,QAAQ,CAACsB,MAAT,CAAiBiC,IAAD,IAAU;AACtC,eAAOA,IAAI,CAACE,WAAL,GAAmBzC,QAAnB,CAA4B,KAAKb,KAAL,CAAWS,QAAX,CAAoB6C,WAApB,EAA5B,CAAP;AACD,OAFa,CAAd,CAFkB,CAKlB;;AACA,0BACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,SAAS,EAAC,qBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AACE,QAAA,KAAK,EAAC,+BADR;AAEE,QAAA,SAAS,EAAE,KAAKT,YAFlB;AAGE,QAAA,QAAQ,EAAE,KAAKF,gBAHjB;AAIE,QAAA,WAAW,EAAC,iBAJd;AAKE,QAAA,EAAE,EAAC,iBALL;AAME,QAAA,IAAI,EAAC,iBANP;AAOE,QAAA,IAAI,EAAC,MAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAaE;AAAI,QAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGQ,KAAK,CACHhC,MADF,CACUqC,IAAD,IAAU,CAAC,KAAKxD,KAAL,CAAWI,aAAX,CAAyBS,QAAzB,CAAkC2C,IAAlC,CADpB,EAEEzB,GAFF,CAEM,CAACC,GAAD,EAAMyB,EAAN,KAAa;AAChB,4BACE;AAAI,UAAA,GAAG,EAAEA,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AAAQ,UAAA,OAAO,EAAE,KAAK9C,qBAAL,CAA2B+C,IAA3B,CAAgC,IAAhC,CAAjB;AAAwD,UAAA,KAAK,EAAE1B,GAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,GADH,CAFF,CADF;AAQD,OAXF,CADH,CAbF,CADF,eA8BE;AAAK,QAAA,SAAS,EAAC,qDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKhC,KAAL,CAAWI,aAAX,CAAyB2B,GAAzB,CAA6B,CAACC,GAAD,EAAMyB,EAAN,kBAC5B;AAAI,QAAA,GAAG,EAAEA,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGzB,GADH,EACQ,GADR,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKd,wBAAL,CAA8BwC,IAA9B,CAAmC,IAAnC,CAAjB;AAA2D,QAAA,GAAG,EAAED,EAAhE;AAAoE,QAAA,KAAK,EAAEzB,GAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADD,CADH,CADF,CA9BF,eA0CE;AAAK,QAAA,SAAS,EAAC,uFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,OAAO,EAAE,KAAKY,qBAAtB;AAA6C,QAAA,SAAS,EAAC,kCAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CA1CF,CADF;AAkDD,KAnL6B;AAAA;;AAqL9Be,EAAAA,MAAM,GAAG;AACP,wBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKJ,WAAL,EAAjB,CAAP;AACD;;AAvL6B;;AA0LhC,eAAexD,OAAf","sourcesContent":["import React, { Component } from \"react\";\n//data\nimport { Symptoms } from \"../../data/Symptoms\";\nimport { Diseases } from \"../../data/Diseases\";\n//component\n\n//CSS\nimport \"./Symptom.css\";\n//icon\n\n// import SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\n\nclass Symptom extends Component {\n  state = {\n    gender: this.props.gender,\n    age: this.props.age,\n    user_symptoms: this.props.userSymptoms,\n    disease_with_possibility: this.props.diseasePossibility,\n    dropdown_style: \"dropdown-menu-on\",\n    searched: \"\",\n  };\n  //data\n  disease_symptoms = Diseases;\n\n  //Adds Symptoms to the UserSymptom state array\n\n  addSymptomButtonEvent = (e) => {\n    if (!this.state.user_symptoms.includes(e.target.value)) {\n      let user_symptoms = [...this.state.user_symptoms, e.target.value];\n      return this.setState({ user_symptoms: user_symptoms }, () => {\n        this.get_possible_disease();\n      });\n    }\n  };\n  //Deletes Symptoms to the UserSymptom state array\n  deleteSymptomButtonEvent = (e) => {\n    if (this.state.user_symptoms.includes(e.target.value)) {\n      let user_symptoms = [...this.state.user_symptoms];\n      user_symptoms = user_symptoms.filter((s) => s !== e.target.value);\n      this.setState({ user_symptoms: user_symptoms }, () => {\n        this.get_possible_disease();\n      });\n    }\n  };\n\n  // get the possible disease with possibility and its name\n  get_possible_disease = () => {\n    let possible_disease_function = (arr1, arr2) => {\n      let empty_array = [];\n      for (let i = 0; i < arr1.length; i++) {\n        for (let n = 0; n < arr2.length; n++) {\n          if (arr1[i] === arr2[n]) {\n            empty_array = [...empty_array, arr1[i]];\n          }\n        }\n      }\n      return empty_array;\n    };\n    let all_objects = [];\n    Object.keys(this.disease_symptoms).map((key) => {\n      let array1 = [...this.disease_symptoms[key]];\n      let array2 = [...this.state.user_symptoms];\n      let empty_array = possible_disease_function(array1, array2);\n      let possbility = ((empty_array.length / array1.length) * 100).toFixed(2);\n      let object = {\n        name: key,\n        possibility: possbility,\n        disease_symptom: this.disease_symptoms[key],\n        symptom_user_has: empty_array,\n      };\n      return (all_objects = [...all_objects, object]);\n    });\n    return this.setState({ disease_with_possibility: all_objects }, () => {\n      this.props.getPossibleDisease(this.state.disease_with_possibility, this.state.user_symptoms);\n    });\n  };\n\n  /*Button Events*/\n\n  //Set the state \"Searched\" according to the input\n  getInputSymptoms = (e) => {\n    return this.setState({ searched: e.target.value });\n  };\n\n  //Set the symptom component\n\n  on_click_reset_button = () => {\n    return this.setState(\n      {\n        user_symptoms: [],\n        disease_with_possibility: [],\n      },\n      () => {\n        return this.get_possible_disease();\n      }\n    );\n  };\n\n  keyDownEvent = (e) => {\n    const re = new RegExp(e.target.value.split(\"\").join(\"\\\\w*\").replace(/\\W/, \"\"), \"i\");\n\n    const symps = Symptoms.filter((each) => {\n      return each.match(re);\n    });\n    if (e.key === \"Enter\") {\n      // eslint-disable-next-line array-callback-return\n      return symps.map((key) => {\n        if (!this.state.user_symptoms.includes(key) && e.target.value.toLowerCase() === key.toLowerCase()) {\n          return this.setState(\n            {\n              user_symptoms: [...this.state.user_symptoms, key],\n            },\n            () => {\n              return this.get_possible_disease();\n            }\n          );\n        } else if (!this.state.user_symptoms.includes(e.target.value)) {\n          for (let i = 0; i < symps.length; i++) {\n            if (!this.state.user_symptoms.includes(symps[i])) {\n              this.setState(\n                {\n                  user_symptoms: [...this.state.user_symptoms, symps[i]],\n                },\n                () => {\n                  return this.get_possible_disease();\n                }\n              );\n              break;\n            }\n          }\n        }\n      });\n    }\n  };\n\n  showContent = () => {\n    // eslint-disable-next-line default-case\n    const symps = Symptoms.filter((each) => {\n      return each.toLowerCase().includes(this.state.searched.toLowerCase());\n    });\n    // console.log(symps, \"symps\");\n    return (\n      <div id=\"#Symptoms\" className=\"grid-row width-full\">\n        <div className=\"col-12 tablet:grid-col-5\">\n          {/* <div className=\"grid-row\"> */}\n          <input\n            class=\"usa-input searchSymptomsInput\"\n            onKeyDown={this.keyDownEvent}\n            onChange={this.getInputSymptoms}\n            placeholder=\"Search Symptoms\"\n            id=\"input-type-text\"\n            name=\"input-type-text\"\n            type=\"text\"\n          />\n          {/* </div> */}\n          {/* <div > */}\n          <ul className=\"symtomsListBox padding-top-2\">\n            {symps\n              .filter((item) => !this.state.user_symptoms.includes(item))\n              .map((key, id) => {\n                return (\n                  <li key={id}>\n                    {/* {console.log(key, \"key\")} */}\n                    <button onClick={this.addSymptomButtonEvent.bind(this)} value={key}>\n                      {key}\n                    </button>\n                  </li>\n                );\n              })}\n          </ul>\n          {/* </div> */}\n        </div>\n        <div className=\"col-12 tablet:grid-col-7 padding-top-2 UserSymptoms\">\n          <ul>\n            {this.state.user_symptoms.map((key, id) => (\n              <li key={id}>\n                {key}{\" \"}\n                <button onClick={this.deleteSymptomButtonEvent.bind(this)} key={id} value={key}>\n                  X\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"col-12 width-full display-flex flex-row flex-justify-start resetButton padding-left-2\">\n          <button onClick={this.on_click_reset_button} className=\"usa-button usa-button--secondary\">\n            Reset\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return <React.Fragment>{this.showContent()}</React.Fragment>;\n  }\n}\n\nexport default Symptom;\n"]},"metadata":{},"sourceType":"module"}